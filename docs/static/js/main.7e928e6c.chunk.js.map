{"version":3,"sources":["Form/index.js","Table/index.js","App.js","index.js"],"names":["InitialForm","date","Date","km","Form","onAddRow","useState","form","setForm","onFieldChange","e","target","name","value","prev","style","margin","onSubmit","preventDefault","className","display","flexDirection","type","data-date","data-date-format","id","onChange","required","borderRadius","marginTop","pencil","icon","faPencilAlt","close","faWindowClose","Table","table","setTable","onEditRow","console","log","width","newTable","exists","forEach","item","map","parseInt","uuid","sort","a","b","textAlign","height","border","scope","align","moment","format","onClick","filter","onDeleteRow","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e928e6c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst InitialForm = {\r\n   \r\n    date: new Date(),\r\n    km: \"\",\r\n  }\r\n\r\nconst Form = ({onAddRow}) => {\r\n  const [form, setForm] = useState(InitialForm);\r\n  //console.log(form);\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAddRow(form);\r\n    setForm(InitialForm);\r\n    \r\n  };\r\n\r\n  const onFieldChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div style={{margin:\"20px auto\", }} >\r\n    <div >\r\n  \r\n    <form onSubmit={onFormSubmit} className = \"container\">\r\n      <div className=\"form row\" style={{display:'flex', flexDirection:\"row\"}} >\r\n        <div className=\"col\">\r\n          <label>Дата </label>\r\n          <input\r\n            type=\"date\"\r\n            data-date=\"\" \r\n            data-date-format=\"DD MMMM YYYY\"\r\n            value={form.date}\r\n            id=\"date\"\r\n            name=\"date\"\r\n            onChange={onFieldChange}\r\n            required\r\n            style={{borderRadius:\"6px\"}}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <label>Пройдено км </label>\r\n          <input \r\n          value={form.km} \r\n          id=\"km\" \r\n          name=\"km\" \r\n          onChange={onFieldChange} \r\n          required\r\n          style={{borderRadius:\"6px\"}}\r\n\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n        <button className=\"btn btn-secondary\" style={{marginTop:'20px'}}>OK</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import Form from \"../Form\";\r\nimport uuid from \"react-uuid\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport moment from \"moment\";\r\n\r\nconst pencil = <FontAwesomeIcon icon={faPencilAlt} />;\r\nconst close = <FontAwesomeIcon icon={faWindowClose} />;\r\n\r\nconst Table = () => {\r\n  const [table, setTable] = useState([]);\r\n\r\n  const onAddRow = (form) => {\r\n    let newTable = [];\r\n\r\n    let exists = false;\r\n\r\n    table.forEach((item) => {\r\n      if (item.date === form.date) {\r\n        exists = true;\r\n      }\r\n    });\r\n\r\n    if (exists) {\r\n      newTable = table.map((item) => {\r\n        if (item.date === form.date) {\r\n          item.km = parseInt(form.km) + parseInt(item.km);\r\n        }\r\n        return item;\r\n      });\r\n    } else {\r\n      newTable = [\r\n        ...table,\r\n        {\r\n          id: uuid(),\r\n          date: form.date,\r\n          km: form.km,\r\n        },\r\n      ];\r\n    }\r\n\r\n    newTable.sort((a, b) => (a.date > b.date ? 1 : b.date > a.date ? -1 : 0));\r\n\r\n    setTable(newTable);\r\n  };\r\n\r\n  const onDeleteRow = (id) => {\r\n    const newTable = table.filter((item) => item.id !== id);\r\n\r\n    setTable(newTable);\r\n  };\r\n\r\n  const onEditRow = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"500px\",  margin: \"10px 60px\" }}>\r\n      <Form onAddRow={onAddRow} />\r\n      <div\r\n        className=\"table\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          margin: \"20px auto\",\r\n          borderRadius: \"15px\",\r\n          height:\"80vh\"\r\n        }}\r\n      >\r\n        <table >\r\n          <thead>\r\n            <tr className=\"row\" style={{ border: \"none\" }}>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                className=\"col\"\r\n                style={{ width: \"120px\" }}\r\n              >\r\n                Дата\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                className=\"col\"\r\n                style={{ width: \"120px\" }}\r\n              >\r\n                Расстояние\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                className=\"col\"\r\n                style={{ width: \"120px\" }}\r\n              >\r\n                Изменить\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                align=\"center\"\r\n                className=\"col\"\r\n                style={{ width: \"120px\" }}\r\n              >\r\n                Удалить\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {table.map((item) => (\r\n              <tr\r\n                className=\"row\"\r\n                style={{ display: \"flex\", border: \"none\" }}\r\n                key={item.id}\r\n              >\r\n                <td className=\"col\" style={{ width: \"120px\" }}>\r\n                  {moment(item.date).format(\"DD/MM/YYYY\")}\r\n                </td>\r\n                <td className=\"col\" style={{ width: \"120px\" }}>\r\n                  {item.km} км\r\n                </td>\r\n                <td className=\"col\" style={{ width: \"120px\" }}>\r\n                  <button onClick={onEditRow}>{pencil}</button>\r\n                </td>\r\n                <td className=\"col\" style={{ width: \"120px\" }}>\r\n                  <button onClick={() => onDeleteRow(item.id)}>{close}</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","\r\nimport './App.css';\r\nimport Table from './Table';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className = \"App\">\r\n    <Table/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}